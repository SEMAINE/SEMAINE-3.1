<behaviourtemplates xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3schools.com template.xsd">

<!-- Introduction -->
	<template id="Moderator_intro_1" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.introState" comparator="not_exists" />
			<indicator startvalue="0" comparator="equals" endvalue="1">
				<icompare value1="$Agent.dialogContext" value2="Introduction" modifier="+1" />
				<icompare value1="$Agent.dialogContext" comparator="not_exists" modifier="+1" />
			</indicator>
			<trigger value1="$User.present" value2="1" />
		</preconditions>
		<effects>
			<update name="User.presentStateChanged" value="0" />
			<update name="DialogueState.introState" value="1" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#Moderator0" />
		</behaviour>
	</template>
	
	<template id="Moderator_intro_2" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.introState" value2="1" />
			<trigger value1="$Agent.speakingState" value2="listening" />
		</preconditions>
		<effects>
			<update name="DialogueState.introState" value="2" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#Moderator1" />
		</behaviour>
	</template>
	
	<template id="Moderator_intro_3" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.introState" value2="2" />
			<trigger value1="$Agent.speakingState" value2="listening" />
		</preconditions>
		<effects>
			<update name="Agent.character" value="Prudence" />
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Prudence" />
				<argument value="contextstate" />
			</function>
			<remove name="DialogueState.introState" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToPrudence" />
		</behaviour>
	</template>
	
<!-- Evaluation -->
	<template id="Moderator_eval_1" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.evalState" comparator="not_exists" />
			<compare value1="$Agent.dialogContext" value2="Questions" />
		</preconditions>
		<effects>
			<update name="DialogueState.evalState" value="1" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#Moderator0" />
		</behaviour>
	</template>
	
	<template id="Moderator_eval_2" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.evalState" value2="1" />
			<trigger value1="$Agent.speakingState" value2="listening" />
		</preconditions>
		<effects>
			<update name="DialogueState.evalState" value="2" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorEval1" />
		</behaviour>
	</template>
	
	<template id="Moderator_eval_3" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.evalState" value2="2" />
			<compare value1="$Agent.nextCharacter" value2="Poppy" />
			<trigger value1="$Agent.speakingIntention" value2="want_turn" />
		</preconditions>
		<effects>
			<update name="Agent.character" value="Poppy" />
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Poppy" />
				<argument value="contextstate" />
			</function>
			<remove name="DialogueState.introState" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToPoppy" />
		</behaviour>
	</template>
	
	<template id="Moderator_eval_4" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.evalState" value2="2" />
			<compare value1="$Agent.nextCharacter" value2="Prudence" />
			<trigger value1="$Agent.speakingIntention" value2="want_turn" />
		</preconditions>
		<effects>
			<update name="Agent.character" value="Prudence" />
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Prudence" />
				<argument value="contextstate" />
			</function>
			<remove name="DialogueState.introState" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToPrudence" />
		</behaviour>
	</template>
	
	<template id="Moderator_eval_5" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.evalState" value2="2" />
			<compare value1="$Agent.nextCharacter" value2="Obadiah" />
			<trigger value1="$Agent.speakingIntention" value2="want_turn" />
		</preconditions>
		<effects>
			<update name="Agent.character" value="Obadiah" />
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Obadiah" />
				<argument value="contextstate" />
			</function>
			<remove name="DialogueState.introState" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToObadiah" />
		</behaviour>
	</template>
	
	<template id="Moderator_eval_6" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$DialogueState.evalState" value2="2" />
			<compare value1="$Agent.nextCharacter" value2="Spike" />
			<trigger value1="$Agent.speakingIntention" value2="want_turn" />
		</preconditions>
		<effects>
			<update name="Agent.character" value="Spike" />
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Spike" />
				<argument value="contextstate" />
			</function>
			<remove name="DialogueState.introState" />
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToSpike" />
		</behaviour>
	</template>
	
<!-- Announcements -->
	<template id="Moderator_Announce_1" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$Agent.nextCharacter" value2="Poppy" />
			<compare value1="$Agent.dialogContext" value2="AnnounceNextCharacter" />
		</preconditions>
		<effects>
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Poppy" />
				<argument value="contextstate" />
			</function>
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToPoppy" />
		</behaviour>
	</template>
	
	<template id="Moderator_Announce_1" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$Agent.nextCharacter" value2="Prudence" />
			<compare value1="$Agent.dialogContext" value2="AnnounceNextCharacter" />
		</preconditions>
		<effects>
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Prudence" />
				<argument value="contextstate" />
			</function>
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToPrudence" />
		</behaviour>
	</template>
	
	<template id="Moderator_Announce_1" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$Agent.nextCharacter" value2="Obadiah" />
			<compare value1="$Agent.dialogContext" value2="AnnounceNextCharacter" />
		</preconditions>
		<effects>
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Obadiah" />
				<argument value="contextstate" />
			</function>
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToObadiah" />
		</behaviour>
	</template>
	
	<template id="Moderator_Announce_1" name="Introduction after system-start">
		<preconditions>
			<compare value1="$Agent.character" value2="Moderator" />
			<compare value1="$Agent.nextCharacter" value2="Spike" />
			<compare value1="$Agent.dialogContext" value2="AnnounceNextCharacter" />
		</preconditions>
		<effects>
			<function name="sendDataAtEndOfTurn">
				<argument value="character" />
				<argument value="Spike" />
				<argument value="contextstate" />
			</function>
		</effects>
		<behaviour class="ResponseActionProposer" quality="1">
			<argument name="response" value="#ModeratorPassToSpike" />
		</behaviour>
	</template>

</behaviourtemplates>