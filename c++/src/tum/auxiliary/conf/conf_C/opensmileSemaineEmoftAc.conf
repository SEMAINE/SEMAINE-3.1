
/*
openSMILE feature configuration for emotion/affect recognition in the SEMAINE system.
This file is based on the feature set of the INTERSPEECH 2010 Paralinguistic Challenge (the interest task, AVIC database).

** This config depends on the following input levels:
  wave, fftmag25
  
** It produces the following output layer:
  - emoFt  (with functionals of LLD of turn segments)

** The config depends on the following messages:
  - turnStart/turnEnd sent to: functL1_EMO, functL1nz_EMO, functOnsets_EMO

*/

/*

Features: (low computational complexity)

Loudness
Energy
Rplp
MFCC
ZCR
Pitch SHS (from prosody...)
MSpec ?
Spectral 

*/


[componentInstances:cComponentManager]

 ; rplp
instance[mspec25_EMO].type=cMelspec
instance[rplp7_EMO].type=cPlp

 ; log bark frequency bands (bfb)
;instance[mspec2_EMO].type=cMelspec
;instance[mspec2log_EMO].type=cVectorOperation

 ; Spectral features
instance[spectral_EMO].type=cSpectral

 ; Zero Crossings
instance[zcr_EMO].type = cMZcr

 ; special pitch configurations
instance[pitch_EMO].type = cPitchSmoother
instance[voiceProb_EMO].type = cPitchSmoother

 ;;; all LLD concattenated and smoothed using a moving average filter
instance[lld_EMO].type=cContourSmoother
instance[lld2_EMO].type=cContourSmoother
 ; delta coefficients of LLD
instance[lld_de_EMO].type=cDeltaRegression
instance[lld2_de_EMO].type=cDeltaRegression

 ;;; functionals over segments input (e.g. turns)
instance[functL1_EMO].type=cFunctionals
instance[functL1nz_EMO].type=cFunctionals
instance[functOnsets_EMO].type=cFunctionals

;instance[emoFt].type = cVectorConcat


\{opensmileSemaineProsody.conf}
\{opensmileSemaineASRft.conf}

////////////////////////////////////////////////////////////////////////////////////////////////
// ~~~~~~~~~ Begin of configuration ~~~~~~~~~~~~~~~~~ //////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////



[mspec25_EMO:cMelspec]
reader.dmLevel=fftmag25
writer.dmLevel=mspec25_EMO
htkcompatible = 0
usePower = 1
lofreq = 20
hifreq = 8000
nBands= 26
specScale = bark


[rplp7_EMO:cPlp]
reader.dmLevel = mspec25_EMO
writer.dmLevel = rplp7_EMO
// nameAppend = 
copyInputName = 1
processArrayFields = 1
lpOrder = 7
nCeps = -1
  ; firstCC 0 will include 0th coeff - loudness measure from auditory spectrum
firstCC = 0
lastCC = -1
doLog = 1
doAud = 1
RASTA = 1
rastaUpperCutoff = 29
rastaLowerCutoff = 0.6
doInvLog = 1
doIDFT = 1
doLP = 1
doLpToCeps = 1
cepLifter = 22
compression = 0.33
htkcompatible = 0


[mspec2_EMO:cMelspec]
reader.dmLevel=fftmag25
writer.dmLevel=mspec2_EMO
htkcompatible = 1
usePower = 1
lofreq = 20
hifreq = 6500
nBands=14
specScale = bark

[mspec2log_EMO:cVectorOperation]
reader.dmLevel=mspec2_EMO
writer.dmLevel=mspec2log_EMO
operation = log
copyInputName = 0
nameAppend=logMelFreqBand

[spectral_EMO:cSpectral]
reader.dmLevel = fftmag50
writer.dmLevel = spectral_EMO
// nameAppend =
copyInputName = 1
processArrayFields = 1
squareInput = 1
// bands[] =
rollOff = 0.95
flux = 1
centroid = 1
maxPos = 0
minPos = 0
entropy = 1
variance = 1
skewness = 0
kurtosis = 0
slope = 0

[zcr_EMO:cMZcr]
reader.dmLevel = fr25
writer.dmLevel = zcr_EMO
// nameAppend =
copyInputName = 1
processArrayFields = 1
zcr = 0
mcr = 1
amax = 0
maxmin = 0
dc = 0


[pitch_EMO:cPitchSmoother]
reader.dmLevel=PR_pitchShs50
writer.dmLevel=pitch_EMO
\{emoFt_bufSize.conf}
// nameAppend =
copyInputName = 1
processArrayFields = 0
medianFilter0 = 0
postSmoothing = 0
postSmoothingMethod = simple
 ; NOTE: octave correction is too agressive, thus we disable it..
octaveCorrection = 0
F0final = 1
F0finalEnv = 0
no0f0 = 0
voicingFinalClipped = 0
voicingFinalUnclipped = 0
F0raw = 0
voicingC1 = 0
voicingClip = 0

[voiceProb_EMO:cPitchSmoother]
reader.dmLevel=PR_pitchShs50
writer.dmLevel=voiceProb_EMO
// nameAppend =
copyInputName = 1
processArrayFields = 0
medianFilter0 = 0
postSmoothing = 0
postSmoothingMethod = simple
 ; NOTE: octave correction is too agressive, thus we disable it..
octaveCorrection = 0
F0final = 0
F0finalEnv = 0
no0f0 = 0
voicingFinalClipped = 0
voicingFinalUnclipped = 1
F0raw = 0
voicingC1 = 0
voicingClip = 0


///////////////////////////////////////////////

[lld_EMO:cContourSmoother]
reader.dmLevel=intens_PR;energy_PR;voiceProb_EMO;mfcc25_ASR;rplp7_EMO;spectral_EMO;zcr_EMO
writer.dmLevel=lld_EMO
smaWin = 3
\{emoFt_bufSize.conf}


// ---- delta regression of LLD ----
[lld_de_EMO:cDeltaRegression]
reader.dmLevel=lld_EMO
writer.dmLevel=lld_de_EMO
deltawin=2
blocksize=1
\{emoFt_bufSize.conf}

[lld2_EMO:cContourSmoother]
reader.dmLevel=pitch_EMO
writer.dmLevel=lld2_EMO
\{emoFt_bufSize.conf}



// ---- delta regression of LLD ----
[lld2_de_EMO:cDeltaRegression]
reader.dmLevel=lld2_EMO
writer.dmLevel=lld2_de_EMO
deltawin=2
blocksize=1
\{emoFt_bufSize.conf}



[functOnsets_EMO:cFunctionals]
reader.dmLevel=pitch_EMO
writer.dmLevel=functOnsets_EMO
\{emoFt_frameMode.conf}
buffersize=20
copyInputName=0
functNameAppend=Turn
functionalsEnabled=Onset;Times
//noPostEOIprocessing = 0
Onset.threshold = 0
;Onset.thresholdOnset = 0
;Onset.thresholdOffset = 0
Onset.useAbsVal = 0
Onset.onsetPos = 0
Onset.offsetPos = 0
Onset.numOnsets = 1
Onset.numOffsets = 0
Times.upleveltime25 = 0
Times.downleveltime25 = 0
Times.upleveltime50 = 0
Times.downleveltime50 = 0
Times.upleveltime75 = 0
Times.downleveltime75 = 0
Times.upleveltime90 = 0
Times.downleveltime90 = 0
Times.risetime = 0
Times.falltime = 0
Times.leftctime = 0
Times.rightctime = 0
Times.duration = 1
Times.norm = second


// statistical functionals
[functL1_EMO:cFunctionals]
reader.dmLevel=lld_EMO;lld_de_EMO
writer.dmLevel=func_EMO
\{emoFt_frameMode.conf}
buffersize=20
functionalsEnabled=Extremes;Regression;Moments;Times
Extremes.max = 1
Extremes.min = 1
Extremes.range = 1
Extremes.maxpos = 1
Extremes.minpos = 1
Extremes.amean = 1
Extremes.maxameandist=0
Extremes.minameandist=0
Extremes.norm = segment
Regression.linregc1 = 1
Regression.linregc2 = 1
Regression.linregerrA = 1
Regression.linregerrQ = 1
Regression.qregc1 = 0
Regression.qregc2 = 0
Regression.qregc3 = 0
Regression.qregerrA = 0
Regression.qregerrQ = 0
Regression.centroid = 0
Moments.variance = 0
Moments.stddev = 1
Moments.skewness = 1
Moments.kurtosis = 1
Moments.amean = 0
Times.upleveltime25 = 1
Times.downleveltime25 = 0
Times.upleveltime50 = 1
Times.downleveltime50 = 1
Times.upleveltime75 = 1
Times.downleveltime75 = 0
Times.upleveltime90 = 1
Times.downleveltime90 = 0
Times.risetime = 1
Times.falltime = 1
Times.leftctime = 0
Times.rightctime = 0
Times.duration = 0
Times.norm = turn

// statistical functionals, for non-0 input values
[functL1nz_EMO:cFunctionals]
reader.dmLevel=lld2_EMO;lld2_de_EMO
writer.dmLevel=funcNz_EMO
\{emoFt_frameMode.conf}
buffersize=20
functionalsEnabled=Extremes;Regression;Moments;Times
Extremes.max = 1
Extremes.min = 1
Extremes.range = 1
Extremes.maxpos = 1
Extremes.minpos = 1
Extremes.amean = 1
Extremes.maxameandist=0
Extremes.minameandist=0
Extremes.norm = segment
Regression.linregc1 = 1
Regression.linregc2 = 1
Regression.linregerrA = 1
Regression.linregerrQ = 1
Regression.qregc1 = 0
Regression.qregc2 = 0
Regression.qregc3 = 0
Regression.qregerrA = 0
Regression.qregerrQ = 0
Regression.centroid = 0
Moments.variance = 0
Moments.stddev = 1
Moments.skewness = 1
Moments.kurtosis = 1
Moments.amean = 0
Times.upleveltime25 = 1
Times.downleveltime25 = 0 
Times.upleveltime50 = 1
Times.downleveltime50 = 1
Times.upleveltime75 = 1
Times.downleveltime75 = 0
Times.upleveltime90 = 1
Times.downleveltime90 = 0
Times.risetime = 1
Times.falltime = 1
Times.leftctime = 0
Times.rightctime = 0
Times.duration = 0
Times.norm = turn
nonZeroFuncts=1

[emoFt:cVectorConcat]
reader.dmLevel = func_EMO;funcNz_EMO;functOnsets_EMO
writer.dmLevel = emoFt
 ; frames...
buffersize=20
 ; IMPORTANT: processArrayFields MUST be 1 here, otherwise we end up
 ;            with a single output field of the dimensionality of the input vector!
processArrayFields=1
