
;;;;; all the components we require are listed here:
[componentInstances:cComponentManager]
 // this line configures the default data memory:
instance[dataMemory].type=cDataMemory

 ////// Enable this, to dump the detected turns as wave files (to the same path as SEMAINExtract.exe is in)
;instance[turnOutp].type=cWaveSinkCut
 
 // set printLevelStats=5 to see the feature names in each level for debugging problems with the feature config
printLevelStats=0
nThreads=1
execDebug=0



/*
*************************************************************
     include configuration files
*************************************************************
*/

#### Audio input (look at this file to change the audio sample-rate and sound device, etc.)
\{opensmileSemaineAudioIn.conf}

#### Prosodic features (pitch, energy, pitch accent)
\{opensmileSemaineProsody.conf}

#### Semaine API senders / receivers
\{opensmileSemaineAPI.conf}

####################### VAD configuration (choose one ...) ########################
//////// the new LSTM and GM based VAD
\{opensmileSemaineVAD2.conf}

//////// a simple energy based VAD with fixed RMS energy threshold (use this in silent environments)
;\{opensmileSemaineVADsimple.conf}

//////// the old rule-based fuzzy VAD and NN model based VAD (UNTESTED in new config!!)
////////\{opensmileSemaineVAD.conf}

####################### ASR configuration (chose one ...) ######################
/// Asr feature extraction configuration
\{opensmileSemaineASRft.conf}

//////// single stream ASR 
\{opensmileSemaineASR.conf}

//////// multi-stream LSTM/HMM tandem ASR architecture  (if you enable this, disable the single stream config!)s
;\{opensmileSemaineASRms.conf}

####################### Emotion configuration (chose one ...) ######################

///////// The computationally complex emotion configuration: ( Set A )
/*
\{conf_A/opensmileSemaineEmoftAc.conf}
;; This file loads the full feature models (need a lot of RAM... only for 64bit)
;\{conf_A/opensmileSemaineEmoA.conf}
;; This file loads the smaller models (created with CFS feature selection)
\{conf_A/opensmileSemaineEmoAsel.conf}
;; The models for interest recognition
\{conf_A/opensmileSemaineIntA.conf}
*/

///////// The computationally less complex emotion configuration: ( Set B )

\{conf_B/opensmileSemaineEmoftAc.conf}
;; This file loads the full feature models (need a lot of RAM... only for 64bit)
;\{conf_B/opensmileSemaineEmoB.conf}
;; This file loads the smaller models (created with CFS feature selection)
\{conf_B/opensmileSemaineEmoBsel.conf}
;; The models for interest recognition
\{conf_B/opensmileSemaineIntB.conf}


///////// The smaller feature set: ( Set C )
/*
\{conf_C/opensmileSemaineEmoftAc.conf}
;; This file loads the full feature models (need a lot of RAM... only for 64bit)
;\{conf_C/opensmileSemaineEmoC.conf}
;; This file loads the smaller models (created with CFS feature selection)
\{conf_C/opensmileSemaineEmoCsel.conf}
;; The models for interest recognition
\{conf_C/opensmileSemaineIntC.conf}
*/


##################### some config sections in the main file ##########################

;;; debug outputs
[turnOutp:cWaveSinkCut]
preSil=0.5
reader.dmLevel = fr25

