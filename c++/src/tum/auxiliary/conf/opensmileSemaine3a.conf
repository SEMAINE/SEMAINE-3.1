
;;;;; all the components we require are listed here:
[componentInstances:cComponentManager]
 // this line configures the default data memory:
instance[dataMemory].type=cDataMemory

instance[turnOutp].type=cWaveSinkCut
printLevelStats=0
nThreads=1
execDebug=0



////// include configuration files

\{opensmileSemaineAudioIn.conf}
\{opensmileSemaineProsody.conf}
\{opensmileSemaineAPI.conf}

;; the new LSTM and GM based VAD
\{opensmileSemaineVAD2.conf}
;; a simple energy based VAD with fixed RMS energy threshold
;\{opensmileSemaineVADsimple.conf}
;; the old rule-based fuzzy VAD and NN model based VAD
;\{opensmileSemaineVAD.conf}

\{opensmileSemaineASRft.conf}
;; single stream ASR 
\{opensmileSemaineASR.conf}
;; multi-stream LSTM/HMM tandem ASR architecture
;\{opensmileSemaineASRms.conf}

;; The computationally complex emotion configuration: ( Set A )
;\{conf_A/opensmileSemaineEmoftAc.conf}
;\{opensmileSemaineEmo_conf2k.conf}
;\{opensmileSemaineIntA.conf}

;; Set B:
\{conf_B/opensmileSemaineEmoftAc.conf}
;\{opensmileSemaineEmo_conf2klowcc.conf}
\{opensmileSemaineIntB.conf}

;; Set C:
;\{conf_C/opensmileSemaineEmoftAc.conf}
;\{opensmileSemaineEmo_conf1k.conf}
;\{opensmileSemaineIntC.conf}



//////// some config sections in the main file /////////

;;; debug outputs
[turnOutp:cWaveSinkCut]
preSil=0.5
reader.dmLevel = fr25

