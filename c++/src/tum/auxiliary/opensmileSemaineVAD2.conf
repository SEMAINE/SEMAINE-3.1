
[componentInstances:cComponentManager]
 ; compute critical-bands from magnitude spectrum
instance[melspec_VAD].type=cMelspec
 ; compute PLP from critical-band spectrum
instance[plp_VAD].type=cPlp
 ; compute log-energy from raw signal frames 
 ; (not windowed, not pre-emphasised: that's the way HTK does it)
instance[energy_VAD].type=cEnergy
 ; compute delta coefficients from mfcc and energy
instance[delta_VAD].type=cDeltaRegression
 ; compute acceleration coefficients from delta coefficients of mfcc and energy
instance[accel_VAD].type=cDeltaRegression
instance[mvn_VAD].type = cVectorMVN
instance[mn2_VAD].type = cVectorMVN
instance[asrFtSmo].type = cContourSmoother

;instance[out].type=cRnnSink
instance[rp_VAD].type=cRnnProcessor

instance[vad].type=cRnnVad
instance[turn].type=cTurnDetector

////////////////////////////////////////////////////////////////////////////////////////////////
// ~~~~~~~~~ Begin of configuration ~~~~~~~~~~~~~~~~~ //////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

[melspec_VAD:cMelspec]
reader.dmLevel=fftmag25
writer.dmLevel=melspec_VAD
; htk compatible sample value scaling
htkcompatible = 0
nBands = 26
; use power spectrum instead of magnitude spectrum
usePower = 1
lofreq = 0
hifreq = 8000
specScale = mel

[plp_VAD:cPlp]
reader.dmLevel=melspec_VAD
writer.dmLevel=plp_VAD
buffersize=100
firstCC = 1
lpOrder = 12
cepLifter = 22
compression = 0.33
htkcompatible = 0
RASTA = 1
rastaUpperCutoff = 60.0
rastaLowerCutoff = 0.2
;rastaUpperCutoff = 29.0
;rastaLowerCutoff = 0.9
doIDFT = 1
doLpToCeps = 1
doLP = 1
doInvLog = 1
doAud = 1
doLog = 1

[energy_VAD:cEnergy]
reader.dmLevel=fr25
writer.dmLevel=energy_VAD
htkcompatible=1
rms = 0
log = 1

[delta_VAD:cDeltaRegression]
reader.dmLevel=plp_VAD
writer.dmLevel=ft0de_VAD
deltawin=2
blocksize=1

[accel_VAD:cDeltaRegression]
reader.dmLevel=ft0de_VAD
writer.dmLevel=ft0dede_VAD
deltawin=2
blocksize=1



[mvn_VAD:cVectorMVN]
reader.dmLevel = plp_VAD;ft0de_VAD;ft0dede_VAD
writer.dmLevel = ftmvn_VAD
// nameAppend =
copyInputName = 1
processArrayFields = 0
mode = transform
initFile = ../auxiliary/models/nets/timit_rplp12da.rumble5db.std.dat
htkcompatible = 0
meanEnable = 1
stdEnable = 1
normEnable = 0

[mn2_VAD:cVectorMVN]
reader.dmLevel = ftmvn_VAD
writer.dmLevel = ftmvn2_VAD
processArrayFields = 0
mode = incremental
updateMethod = fix
fixedBuffer = 30.0
meanEnable = 1
stdEnable = 0
normEnable = 0

[rp_VAD:cRnnProcessor]
reader.dmLevel = ftmvn2_VAD
writer.dmLevel = vad_VAD
netfile=../auxiliary/models/nets/vadAllRSBctc2.lstm.net
classlabels = sil,voice

[asrFtSmo:cContourSmoother]
reader.dmLevel = asrFt
writer.dmLevel = asrFtS
smaWin=20

[vad:cRnnVad]
reader.dmLevel = vad_VAD;energy_VAD;asrFtS
writer.dmLevel = vadlstm
voiceIdx = 1
energyIdx= 3
ftIdx = 4
vmUserBuffersize_sec = 1.0
vmRangeCal_sec = 10.0
vmUserNbins=150



[turn:cTurnDetector]
;reader.dmLevel=energy
reader.dmLevel=vadlstm
writer.dmLevel=isTurn
readVad=1
writer.levelconf.noHang=1
msgInterval = 2.0
messageRecp = functL1,bowProducerAro,bowProducerVal
;eventRecp = fftmp1z,fftmp2z,mfccz,mfcczD,mfcczA,kwj,turnOutp
eventRecp = mfcc25z_ASR,julius,turnOutp
statusRecp = emmaSender
;idx = 0
;autoThreshold = 0
;threshold = 0.0015
nPre=2
nPost=40
debug=\cm[turndebug{4}:set this to 1 to see turn/speaking debug messages]
maxTurnLength=8
maxTurnLengthGrace=10
