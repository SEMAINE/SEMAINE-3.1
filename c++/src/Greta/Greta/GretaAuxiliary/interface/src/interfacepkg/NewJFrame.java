/*
 * NewJFrame.java
 *
 * Created on 19 maj 2008, 12:30
 */
package interfacepkg;

import javax.swing.JFileChooser;
import java.io.*;
import com.cmlabs.air.*;

/**
 *
 * @author  radek
 */

public class NewJFrame extends javax.swing.JFrame {
    
    File selected_file;
            
private JavaAIRPlug plug;
         
    /** Creates new form NewJFrame */
    public NewJFrame() {
        initComponents();
    }
    
 public void connect(String host, int port) {
        
        plug = new JavaAIRPlug("SimpleBMLSender", host, port);
        if (!plug.init()) {
            System.out.println("Could not connect to the Server on " + host + " on port " + port + ". Exit.");
            System.exit(1);
        }
        
        //logger.log(Error,"Connected to the Server on " + host + " on port " + port + "...");
        
        if (!plug.openTwoWayConnectionTo("Greta.Whiteboard")) {
            System.out.println("Could not open callback connection to Greta.Whiteboard. Exit.");
            System.exit(1);
        }
        
        String xml = "<module name=\"SimpleBMLSender\" allowselftriggering=\"yes\">"+
                "              <spec>"+
                "                 <context name=\"Psyclone.System.Ready\">"+
                 "   <phase id=\"Phase One\">" +
//                "                         <trigger from=\"Greta.Whiteboard\" type=\"Greta.Data.BML\" />" +                    "                    </phase>" +
//                "                    <phase id=\"Phase Two\">" +
                "                       <post to=\"Greta.Whiteboard\" type=\"Greta.Data.BML\" />" +
                "                       <post to=\"Greta.Whiteboard\" type=\"Greta.Data.FML\" />"  +
                "                       <post to=\"Greta.Whiteboard\" type=\"Greta.RealtimePlayer.Command\" />"   +"</phase>" + "   </context>"+
                "              </spec>"+
                "           </module>";
        
        //String xml = "<module name=\"Process\"><trigger from=\"Greta.Whiteboard\" type=\"My.Test.Message.Input\" /><trigger to=\"Greta.Whiteboard\" type=\"My.Test.Message.Output\" /></module>";
        
        if (!plug.sendRegistration(xml)) {
            System.out.println("Could not register for messages. Exit.");
            System.exit(1);
        } else {
            System.out.println("Ready to send messages...");
        }
        
    }// end of connect
    
     public void process(String send, String message_type) {
        
        //Message message = null;
        
         //if ( (message = plug.waitForNewMessage(1)) != null) {
            Time now = new Time();
            //System.out.println("Message received at:" + now.printTime());

            //logger.log(Debug,"message content: \n"+ message.content);
            
            System.out.print(message_type);
            Message msg_ans = new Message("SimpleBMLSender","Greta.Whiteboard", message_type);
            
            try{
                //System.out.println(message.content);
                
                msg_ans.content = send;
                                
                //System.out.println(msg_ans.content);
                
                //logger.log(Debug,"Answer: \n"+msg_ans.content);
                boolean posted = plug.postOutputMessage(msg_ans);
                
                //plug.sendOutputMessages();                
                if (!posted) {
                    System.out.println("I could not post message...");
                    //logger.log(Error,"Message posted successfully.");
                }  else {
                    now = new Time();
                    System.out.println("Message posted at:" + now.printTime());     
                }
            }
            
            catch (Exception myexception){
                System.out.println("I could not generate answer..."+ myexception);
                //logger.log(Error,"The error is: "+myexception.getMessage());
            //}
        }
    }// end of process
    
    
    /**
     * closes connection
     */
    
    public void destroy() {
        if (plug != null)
            plug.destroy();
    }
    
     
    
    String  ipname;
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Send as FML");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");

        jButton5.setText("Send as BML");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Open BML");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Open FML");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Save as BML");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem3.setText("Save as FML");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Examples");

        jMenuItem5.setText("infinite expression");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("intensity");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Item");
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("Item");
        jMenu3.add(jMenuItem8);

        jMenuItem9.setText("Item");
        jMenu3.add(jMenuItem9);
        jMenu3.add(jSeparator1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(5, 5, 5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(344, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
//GEN-LAST:event_jMenuItem1ActionPerformed
    
        JFileChooser f = new JFileChooser();
        f.setCurrentDirectory(new File("c://code//greta//bin//bml"));    
      
        ExampleFileFilter jfilter = new ExampleFileFilter();
        jfilter.addExtension("xml");        
        f.setFileFilter(jfilter);
        
         int returnVal = f.showOpenDialog(this);

          if (returnVal == JFileChooser.APPROVE_OPTION) {
            selected_file = f.getSelectedFile();
            String text="";
            try {
                   BufferedReader in = new BufferedReader(new FileReader(selected_file));                
                    String str;        
                    
                    while ((str = in.readLine()) != null) 
                 
                    {
                        String temp = new String("bml.dtd");                       
                        
                        if ( str.contains( temp )==true ) 
                        {                            
                           str=str.replace(temp, "bml/bml.dtd" );
                        }                          
                        text+=str+"\n";
                    }                     
                    
                    in.close();
            } catch (IOException e) {}
            
       jTextArea1.setText(text);
            
        } else {            }
         
         
         
       // Display the dialog and wait for the user's response
       //f.show();                       

            //directory = f.getDirectory();    // Remember new default directory
            //setFile(directory, f.getFile()); // Load and display selection
            //f.dispose();                     // Get rid of the dialog box

    }

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        
          JFileChooser f = new JFileChooser();
        f.setCurrentDirectory(new File("c://code//greta//bin//apml"));    
  
        ExampleFileFilter jfilter = new ExampleFileFilter();
        jfilter.addExtension("xml");        
        f.setFileFilter(jfilter);
        
         int returnVal = f.showOpenDialog(this);

          if (returnVal == JFileChooser.APPROVE_OPTION) {
            selected_file = f.getSelectedFile();
            
            try {
                   BufferedWriter out = new BufferedWriter(new FileWriter(selected_file));                
                    out.write(jTextArea1.getText());                    
                    out.close();
            } catch (IOException e) {}
                        
        } else 
        { }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
         JFileChooser f = new JFileChooser();
         f.setCurrentDirectory(new File("c://code//greta//bin//bml"));    
            ExampleFileFilter jfilter = new ExampleFileFilter();
        jfilter.addExtension("xml");        
        f.setFileFilter(jfilter);
            //f.setDirectory("");       // Set the default directory

         int returnVal = f.showSaveDialog(this);

          if (returnVal == JFileChooser.APPROVE_OPTION) {
            selected_file = f.getSelectedFile();
            
            try {
                   BufferedWriter out = new BufferedWriter(new FileWriter(selected_file));                
                    out.write(jTextArea1.getText());                    
                    out.close();
            } catch (IOException e) {}
                        
        } else 
        { }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        JFileChooser f = new JFileChooser();
        f.setCurrentDirectory(new File("c://code//greta//bin//apml"));    
        
    ExampleFileFilter jfilter = new ExampleFileFilter();
        jfilter.addExtension("xml");        
        f.setFileFilter(jfilter);
         int returnVal = f.showOpenDialog(this);

          if (returnVal == JFileChooser.APPROVE_OPTION) {
            selected_file = f.getSelectedFile();
            String text="";
            try {
                   BufferedReader in = new BufferedReader(new FileReader(selected_file));                
                    String str;        
                    while ((str = in.readLine()) != null) 
                 
                    {
                        String temp = new String("fml-apml.dtd");                       
                        
                        if ( str.contains( temp )==true ) 
                        {                            
                           str=str.replace(temp, "apml/fml-apml.dtd" );
                        }                          
                        text+=str+"\n";
                    }
                    in.close();
            } catch (IOException e) {}
            
       jTextArea1.setText(text);
            
        } else {            }
        
         
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
                 this.process(jTextArea1.getText(), "Greta.Data.FML");
                 
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
   
                 String header = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE bml SYSTEM \"bml/bml.dtd\"><bml>";
                String footer = "</bml>";
                jTextArea1.setText(header+"<face id=\"exp\"  start=\"1.0\" end=\"infinite\">\n " +
                        "<description level=\"1\" type=\"gretabml\">\n" +
                        "<reference>affect=anger</reference>\n"+
            		"<FLD.value>0.00</FLD.value>\n"+
                	"<PWR.value>0.00</PWR.value>\n"+
                        "<REP.value>0.00</REP.value>\n"+
                        "<SPC.value>0.00</SPC.value>\n"+
                        "<TMP.value>0.00</TMP.value>\n"+
                        "</description>\n"+
                        "</face>\n"+footer);   
   
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
         String header = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE bml SYSTEM \"bml/bml.dtd\"><bml>";
         String footer = "</bml>";

        jTextArea1.setText(header+"<face id=\"ex1\" start=\"1\" end=\"3\">\n " +
	"<description level=\"1\" type=\"gretabml\">\n " +
	"<reference>affect=fear</reference>\n " +
	"	<intensity>0.2</intensity>\n " +
	"	<SPC.value>-0.8</SPC.value>\n " +
	"	<TMP.value>0</TMP.value>\n " +
	"	<FLD.value>1</FLD.value>\n " +
	"	<PWR.value>-0.7</PWR.value>\n " +
	 " </description>\n " +
	"</face>\n " +
"<face id=\"ex2\" start=\"4\" end=\"3\">\n " +
"	<description level=\"1\" type=\"gretabml\">\n " +
"	<reference>affect=fear</reference>\n " +
"		<intensity>0.4</intensity>\n " +
"		<TMP.value>-1</TMP.value>\n " +
"		<FLD.value>1</FLD.value>\n " +
"		<PWR.value>-0.6</PWR.value>\n " +
"	  </description>\n " +
"	</face>\n " +
"<face id=\"ex3\" start=\"7\" end=\"3\">\n " +
 "	<description level=\"1\" type=\"gretabml\">\n " +
"	<reference>affect=fear</reference>\n " +
"		<intensity>0.7</intensity>\n " +
"		<TMP.value>0</TMP.value>\n " +
"		<FLD.value>1</FLD.value>\n " +
"		<PWR.value>-0.7</PWR.value>\n " +
"	  </description>\n " +
"	</face>\n " +
"<face id=\"ex4\" start=\"10\" end=\"3.0\">\n " +
"	<description level=\"1\" type=\"gretabml\">\n " +
"	<reference>affect=fear</reference>\n " +
"		<intensity>0.9</intensity>\n " +
"		<TMP.value>0</TMP.value>\n " +
"		<FLD.value>1</FLD.value>\n " +
"		<PWR.value>-0.6</PWR.value>\n " +
"	  </description>\n " +
"	</face>\n"+footer);

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        this.process("DELETEDIFF 0 99999", "Greta.RealtimePlayer.Command");
        jTextArea1.setText("");
            
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        this.process(jTextArea1.getText(), "Greta.Data.BML");                
        
                
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        final String ip_number;
        if (args.length==1) ip_number = args[0]; 
        else ip_number="127.0.0.1";
    
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJFrame nf1 = new NewJFrame();
                nf1.connect(ip_number,10000);                
                nf1.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    
}
