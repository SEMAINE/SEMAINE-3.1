var timerID;var thelayer;var lastwb = "";var dropDownListOpen = new Object();// var wbListAutoUpdateOn = false;  var wbDropdownArrowUp = new Image(22,22); wbDropdownArrowUp.src = "images/arrow-a-small.gif";var wbDropdownArrowDown = new Image(22,22); wbDropdownArrowDown.src = "images/arrow-b-small.gif";var wbFixDropdownListOn = new Image(22,22); wbFixDropdownListOn.src = "images/wb-dropdown-pin-down.gif";var wbFixDropdownListOff = new Image(22,22); wbFixDropdownListOff.src = "images/wb-dropdown-pin-up.gif";var wbAutoUpdateOn = new Image(22,22); wbAutoUpdateOn.src = "images/continuousUpdateOn.gif";var wbAutoUpdateOff = new Image(22,22); wbAutoUpdateOff.src = "images/continuousUpdateOff.gif";var wbAutoUpdateList = new Object();
var isLiveUpdatingNow = false;function bytifySizes(val1, val2) {	var kb = 1024;	var mb = kb*1024;	var gb = mb*1024;	var tb = gb*1024;	var end;	var val;	var maximum = val1;	if (val2 > maximum)		maximum = val2;	if (maximum < 512) {		val = 1;		end = "B";	}	else if (maximum < 512*kb) {		val = kb;		end = "KB";	}	else if (maximum < 512*mb) {		val = mb;		end = "MB";	}	else if (maximum < 512*gb) {		val = gb;		end = "GB";	}	else {		val = gb;		end = "TB";	}	return "" + (val1/val).toPrecision(4) + " / " + (val2/val).toPrecision(4) + " " + end;}function bytifySize(val) {	var v = 0.0;	var kb = 1024;	var mb = kb*1024;	var gb = mb*1024;	var tb = gb*1024;	if (val < 512) {		v = val / 1.0;		return "" + v.toPrecision(4) + " B";	}	else if (val < 512*kb) {		v = val / kb;		return "" + v.toPrecision(4) + " KB";	}	else if (val < 512*mb) {		v = val / mb;		return "" + v.toPrecision(4) + " MB";	}	else if (val < 512*mb) {		v = val / gb;		return "" + v.toPrecision(4) + " GB";	}	else {		v = val / tb;		return "" + v.toPrecision(4) + " TB";	}}function bytifyRate(val) {	return bytifySize(val) + "/sec";}function bytifyRates(val1, val2) {	return bytifySizes(val1, val2) + "/sec";}function startMonitoring() {	timerID=setTimeout("runMonitoring()", 5000); }function runMonitoring() {//	if (document.frontpagemonitor != null) {//		if (document.frontpagemonitor.isAlive()) {//			window.status="Live Update running...";//		}//		else {//			window.status="Live Update no longer running...";//			refreshPage();//		}//	}//	else {//		window.status="Live Update not available...";//	}	if (isLiveUpdatingNow)		LiveUpdateNow();	UpdateListsNow();		getPsycloneID(CallbackID);	timerID=setTimeout("runMonitoring()", 1000); }function isdefined(variable){	return (typeof(window[variable]) == "undefined")?  false: true;}function showOnline(){	document.images.monitorstatus.src = "images/continuousUpdateOn.gif";}function showOffline(){	document.images.monitorstatus.src = "images/continuousUpdateOff.gif";}function showConnecting(){	document.images.monitorstatus.src = "images/continuousUpdateOn.gif";}function isLiveUpdating() {	return isLiveUpdatingNow;//	if (document.frontpagemonitor != null) {//		if (document.frontpagemonitor.isAlive()) {//            return document.frontpagemonitor.isOnline();//		}//	}	return false;}function switchMonitoring(){	isLiveUpdatingNow = (!isLiveUpdatingNow);		if (isLiveUpdatingNow) {		showOnline();	}	else {		showOffline();	}	//	if (document.frontpagemonitor != null) {//		if (document.frontpagemonitor.isAlive()) {//			if (document.frontpagemonitor.isOnline()) {//				document.frontpagemonitor.goOffline();//			}//			else {//				document.frontpagemonitor.goOnline();//			}//		}//	}}function LiveUpdateNow() {	getAllPerfStats(CallbackLiveUpdate);}function LiveUpdateWBNow(wb) {	getPerfStat(wb, CallbackLiveUpdate);}function changeText(elemID, msgin, msgout, msgmax, msgcur, msgtime_in, msgtype_in, msgfrom_in, msgvia_in, msgtime_out, msgtype_out, msgvia_out, streamscount, streamssize, streamstotal, streamsratein, streamsrateout, actIn, actOut, actCPU) {	var elem;	var id;	if (msgin != "") {		id = elemID+"_in";		elem = document.getElementById(id);		if (elem != null) {			setText(elem, (" "+msgin));		}	}	if (msgout != "") {		id = elemID+"_out";		elem = document.getElementById(id);		if (elem != null)			setText(elem, (" "+msgout));	}	if (msgcur != "") {		id = elemID+"_cur";		elem = document.getElementById(id);		if (elem != null) {			setText(elem, (" "+msgcur));		}	}	if (msgmax != "") {		id = elemID+"_max";		elem = document.getElementById(id);		if (elem != null)			setText(elem, (" "+msgmax));	}	if ((msgtime_in != "") && (msgtype_in != "") && (msgfrom_in != "")) {		id = elemID+"_msgtime";		elem = document.getElementById(id);		if (elem != null)			setText(elem, msgtime_in);		id = elemID+"_msgtype";		elem = document.getElementById(id);		if (elem != null)			setText(elem, msgtype_in);		id = elemID+"_msgfrom";		elem = document.getElementById(id);		if (elem != null)			setText(elem, msgfrom_in);	}	if ((msgtime_in != "") && (msgtype_in != "")) {		id = elemID+"_msgin";		elem = document.getElementById(id);		if (elem != null)			setText(elem, (msgtime_in + " | " + msgtype_in));	}	if ((msgtime_out != "") && (msgtype_out != "")) {		id = elemID+"_msgout";		elem = document.getElementById(id);		if (elem != null)			setText(elem, (msgtime_out + " | " + msgtype_out));				}	// streamscount, streamssize, streamstotal, streamsratein, streamsrateout//	if (streamscount != "") {//		id = elemID+"_streamscount";//		elem = document.getElementById(id);//		if (elem != null)//			elem.innerText = " "+streamscount;//	}	if (streamssize != "") {		id = elemID+"_streamssize";		elem = document.getElementById(id);		if (elem != null)			setText(elem, bytifySize(streamssize));	}	if (streamstotal != "") {		id = elemID+"_streamstotal";		elem = document.getElementById(id);		if (elem != null)			setText(elem, bytifySize(streamssize));	}	if ((streamsratein != "") && (streamsrateout != "")) {		id = elemID+"_streamsrate";		elem = document.getElementById(id);		if (elem != null)			setText(elem, bytifyRates(streamsratein, streamsrateout));	}	// this is necessary because firefox/mozilla use innerHTML instead of innerText	function setText(obj, text){  		if (window.navigator.appName.toLowerCase().indexOf("netscape") > -1) {      			// Firefox	      		obj.innerHTML = text;     		}    		else {     			obj.innerText = text;  		}	}}function ShowLayer(layer) {	if(document.layers){		//thisbrowser="NN4";		thelayer = document.layers[layer];		thelayer.visibility="visible";	}	if(document.all){		//thisbrowser="ie"		thelayer = document.all[layer];		thelayer.style.visibility="visible";	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";		thelayer = document.getElementById(layer);		thelayer.style.visibility="visible";	}}function HideLayer(layer) {	if(document.layers){		//thisbrowser="NN4";		thelayer = document.layers[layer];		thelayer.visibility="hidden";	}	if(document.all){		//thisbrowser="ie"		thelayer = document.all[layer];		thelayer.style.visibility="hidden";	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";		thelayer = document.getElementById(layer);		thelayer.style.visibility="hidden";	}}function SetLayerContent(layer, content) {	if(document.layers){		//thisbrowser="NN4";		thelayer = document.layers[layer];		thelayer.document.open();		thelayer.document.write(content);		thelayer.document.close();	}	if(document.all){		//thisbrowser="ie"		thelayer = document.all[layer];		thelayer.innerHTML=content;	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";		thelayer = document.getElementById(layer);		thelayer.innerHTML = content;	}}function FixLayer(layer) {	if(document.layers){		//thisbrowser="NN4";		thelayer = document.layers[layer];		thelayer.position="relative";		thelayer.zIndex='1';		thelayer.borderColor='#FFFFFF';	}	if(document.all){		//thisbrowser="ie"		thelayer = document.all[layer];		thelayer.style.position="relative";		thelayer.style.zIndex='1';		thelayer.style.borderColor='#FFFFFF';	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";		thelayer = document.getElementById(layer);		thelayer.style.position="relative";		thelayer.style.zIndex='1';		thelayer.style.borderColor='#FFFFFF';	}}function FloatLayer(layer) {	if(document.layers){		//thisbrowser="NN4";		thelayer = document.layers[layer];		thelayer.position="absolute";		thelayer.zIndex='2';		thelayer.borderColor='#666666';	}	if(document.all){		//thisbrowser="ie"		thelayer = document.all[layer];		thelayer.style.position="absolute";		thelayer.style.zIndex='2';		thelayer.style.borderColor='#666666';	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";		thelayer = document.getElementById(layer);		thelayer.style.position="absolute";		thelayer.style.zIndex='2';		thelayer.style.borderColor='#666666';	}}function IsLayerFixed(layer) {	if(document.layers){		//thisbrowser="NN4";		thelayer = document.layers[layer];		return (thelayer.position == "relative");	}	if(document.all){		//thisbrowser="ie"		thelayer = document.all[layer];		return (thelayer.style.position == "relative");	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";		thelayer = document.getElementById(layer);		return (thelayer.style.position == "relative");	}}function IsListUpdating(wb) {	//var img = wb + "_ContinuousUpdate";	//var txt =GetInnerText(img);	//return (txt == "stop auto update");	return (wbAutoUpdateList[wb].length > 0);
}function OpenList(wb) {	var listname = wb + "_List";	var entryname = wb + "_Entry";	var tablename = wb + "_Table";	var img = wb + "_wbDropdownArrow";	if (dropDownListOpen[wb] && (dropDownListOpen[wb].length > 0)) {
		CloseList(wb);	}	else {        HideLastList();	    ShowLayer(listname);	    ShowLayer(tablename);	    HideLayer(entryname);	    FloatLayer(listname);	    FixLayer(entryname);        // UpdateListNow(wb);   	    ShowListFloating(wb);   	    if (isLiveUpdating())            StartListUpdate(wb);        else            StopListUpdate(wb);        lastwb = wb;		dropDownListOpen[wb] = "yes";	    SetImage(img, wbDropdownArrowDown.src);	}}function CloseList(wb) {	var listname = wb + "_List";	var entryname = wb + "_Entry";	var tablename = wb + "_Table"; 	var img = wb + "_wbDropdownArrow";    StopListUpdate(wb);	ShowLayer(entryname);	HideLayer(listname);	HideLayer(tablename);	FloatLayer(listname);	FixLayer(entryname);    lastwb = "";	dropDownListOpen[wb] = "";		SetImage(img, wbDropdownArrowUp.src);}function HideLastList(wb) {    if (lastwb.length > 0)        CloseList(lastwb);    lastwb = "";}function ToggleFixList(wb) {	var listname = wb + "_List";	var entryname = wb + "_Entry";	var floatingTableID = wb + "_floatingTable";	var floatingTable = document.getElementById(floatingTableID);	if (IsLayerFixed(listname)) {		HideLastList();		FloatLayer(listname);		FixLayer(entryname);		ShowListFloating(wb);		floatingTable.border='0';        lastwb = wb;	}	else {		FixLayer(listname);		FloatLayer(entryname);		ShowListFixed(wb);		floatingTable.border='2';        lastwb = "";	}}function ToggleUpdateList(wb) {	if (IsListUpdating(wb))		StopListUpdate(wb);	else		StartListUpdate(wb);}function ShowListFixed(wb) {	var img = wb + "_wbFixDropdownList";	SetImage(img, wbFixDropdownListOn.src);	// SetInnerText(img, "float");}function ShowListFloating(wb) {	var img = wb + "_wbFixDropdownList";	SetImage(img, wbFixDropdownListOff.src);	// SetInnerText(img, "fix");}function StartListUpdate(wb) {	wbAutoUpdateList[wb] = "yes";	ShowListUpdating(wb);/*	if (document.frontpagemonitor != null) {		if (document.frontpagemonitor.isAlive()) {			document.frontpagemonitor.addWBUpdate(wb, spec);			ShowListUpdating(wb);		}	}*/}function StopListUpdate(wb) {	wbAutoUpdateList[wb] = "";//	alert(wb + "," + wbAutoUpdateList[wb]);
	ShowListNotUpdating(wb);/*	if (document.frontpagemonitor != null) {		if (document.frontpagemonitor.isAlive()) {			document.frontpagemonitor.removeWBUpdate(wb);			ShowListNotUpdating(wb);		}	}*/}function UpdateListsNow() {	var c = 0;	for (var wb in wbAutoUpdateList) {
		if (wbAutoUpdateList[wb].length > 0) {
			c = GetInputValue(wb + "_ContinuousUpdateMax");
			// alert(wb + ": " + c);
			if ( (c < 1) || (c > 200) )
				c = 20;
			retrieveWBList(wb, c, CallbackWBList, wb);			// UpdateListNow(wb)
		}
	}
}function UpdateListNow(wb) {	if (wbAutoUpdateList[wb].length > 0)
		return;
    var html = "<table width=\"100%\"><tr><td align=\"center\" valign=\"middle\" class=\"keyConcept\">Updating list ... </td></tr></table>";    UpdateWBList(wb, html);	var c = GetInputValue(wb + "_ContinuousUpdateMax");
	if ( (c < 1) || (c > 200) )
		c = 20;
	retrieveWBList(wb, c, CallbackWBList, wb);}function ShowListUpdating(wb) {	var img = wb + "_ContinuousUpdate";	SetImage(img, wbAutoUpdateOn.src);	//SetInnerText(img, "stop auto update");	// wbListAutoUpdateOn = true;}function ShowListNotUpdating(wb) {	var img = wb + "_ContinuousUpdate";	SetImage(img, wbAutoUpdateOff.src);	// SetInnerText(img, "start auto update");	// wbListAutoUpdateOn = false;}function UpdateWBList(wb, html) {	var tablename = wb + "_Table";	// alert("WBUpdate " + wb + ": " + html);	SetInnerHTML(tablename, html);}function SetImage(img, file) {	var elem = document.getElementById(img);	elem.src = file;}function SetInnerText(img, text) {	var elem = document.getElementById(img);	if(document.layers){		//thisbrowser="NN4";   		elem.innerHTML = text; 	}	if(document.all){		//thisbrowser="ie"   		elem.innerText = text; 	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";   		elem.innerHTML = text; 	}}function SetInnerHTML(img, text) {	var elem = document.getElementById(img);	if(document.layers){		//thisbrowser="NN4";   		elem.innerHTML = text; 	}	if(document.all){		//thisbrowser="ie"   		elem.innerHTML = text; 	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";   		elem.innerHTML = text; 	}}function GetInnerText(img) {	var elem = document.getElementById(img);	if(document.layers){		//thisbrowser="NN4";   		return elem.innerHTML; 	}	if(document.all){		//thisbrowser="ie"   		return elem.innerText; 	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";   		return elem.innerHTML; 	}}function GetInputValue(img) {	var elem = document.getElementById(img);	return elem.value;}function CallbackWBList(req) {
	var wb = "";
	
	try {		//if request was successful or running script locally		if (req.status==200 || window.location.href.indexOf("http")==-1) { 			p1 = req.responseText.indexOf("<!-- ");
			p2 = req.responseText.indexOf(" -->");
			// alert(wb + "," + myajax.responseText);
			if ( (p1 >= 0) && (p2 > 0) ) {
				wb = req.responseText.substring(p1+5, p2);
				// alert(wb + "," + req.responseText);
			    UpdateWBList(wb, req.responseText);				getPerfStat(wb, CallbackLiveUpdate);			}		}		else {			// alert("Error: " + req.status);		}	} catch (e) {}}

function CallbackLiveUpdate(req) {
	var comp = "";

	try {		//if request was successful or running script locally		if (req.status==200 || window.location.href.indexOf("http")==-1) { 			// alert(req.responseText);
			var col_array = req.responseText.split("\n");
			var part_num=0;
			while (part_num < col_array.length)
			{
				if (col_array[part_num].length > 0) {
					// alert(col_array[part_num]);
					str = "changeText(" + col_array[part_num] + ");";
					// alert(str);
					eval(str);
				}
				part_num+=1;
			}
		}		else {			// alert("Error: " + req.status);		}	} catch (e) {}}

function CallbackID(req) {	var id = "";	try {		//if request was successful or running script locally		if (req.status==200 || window.location.href.indexOf("http")==-1) { 			id = req.responseText;		}		else {			// alert("Error: " + myajax.status);		}	} catch (e) {}	if (id.length == 0) {		// alert("No ID: " + req.status);		ShowImage('offline');		//if (isLiveUpdatingNow)		//  switchStreamUpdate();	}	else {		// alert("ID: " + id);		SystemID = id;		HideImage('offline');	}}function ShowImage(image) {	if(document.layers){		//thisbrowser="NN4";		theimage = document.images[image];		if (theimage != null)			theimage.visibility="visible";	}	if(document.all){		//thisbrowser="ie"		theimage = document.all[image];		if (theimage != null)			theimage.style.visibility="visible";	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";		theimage = document.getElementById(image);		if (theimage != null)			theimage.style.visibility="visible";	}}function HideImage(image) {	//  alert("Hiding image " + image);	if(document.images){		//thisbrowser="NN4";		theimage = document.images[image];		if (theimage != null)			theimage.visibility="hidden";	}	if(document.all){		//thisbrowser="ie"		theimage = document.all[image];		if (theimage != null)			theimage.style.visibility="hidden";	}	if(!document.all && document.getElementById){		//thisbrowser="NN6";		theimage = document.getElementById(image);		if (theimage != null)			theimage.style.visibility="hidden";	}}